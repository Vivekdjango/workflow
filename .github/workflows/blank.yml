name: Deploy Airflow to Kubernetes

on:
  push:
    branches:
      - main

env:
  HELM_RELEASE_NAME: "airflow"
  HELM_CHART_REPO: "https://airflow.apache.org"
  HELM_CHART_NAME: "apache-airflow/airflow"
  NAMESPACE: "airflow"
  DAGS_GIT_REPO: "https://github.com/Vivekdjango/airflow.git"
  DAGS_GIT_BRANCH: "main"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Authenticate to Azure
      uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
          version: 'latest'
          
    - name: Azure CLI - AKS set context
      uses: azure/aks-set-context@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.AZURE_RG }}
          cluster-name: ${{ secrets.AZURE_CLUSTER }}
          
    - name: Set up kubectl
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Set up Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Verify Kubernetes access
      run: kubectl cluster-info

    - name: Add Helm repo
      run: helm repo add apache-airflow ${{ env.HELM_CHART_REPO }}

    - name: Update Helm repos
      run: helm repo update

    - name: Deploy Airflow with Helm
      run: |
        helm upgrade --install ${{ env.HELM_RELEASE_NAME }} ${{ env.HELM_CHART_NAME }} \
          --namespace ${{ env.NAMESPACE }} \
          --create-namespace \
          --set dags.persistence.enabled=true \
          --set dags.persistence.size=1Gi \
          --set dags.gitSync.enabled=true \
          --set dags.gitSync.repo=${{ env.DAGS_GIT_REPO }} \
          --set dags.gitSync.branch=${{ env.DAGS_GIT_BRANCH }} \
          --set dags.gitSync.wait=true \
          --set dags.gitSync.timeout=30s
